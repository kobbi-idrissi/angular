{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/file-upload/file-upload.component.ts","./src/app/file-upload/file-upload.component.html","./src/app/file-upload/file-upload.module.ts","./src/app/file-upload/upload.service.ts","./src/app/home/welcome.component.ts","./src/app/home/welcome.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts","./src/app/shared/event.service.ts","./src/app/shared/st-parameter.service.ts","./src/app/users/user-detail.component.ts","./src/app/users/user-detail.component.html","./src/app/users/user-detail.guard.ts","./src/app/users/user-list.component.ts","./src/app/users/user-list.component.html","./src/app/users/user.module.ts","./src/app/users/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Inject, OnDestroy, OnInit, Injectable } from '@angular/core';\nimport { Observable, Observer, fromEvent, merge, interval, Subscription, Subject,timer } from 'rxjs';\nimport { map, first,switchMap, take } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { EventService } from \"./shared/event.service\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { FileUploadService } from \"./file-upload/upload.service\";\nimport { FormGroup, FormControl } from '@angular/forms';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n  MatSnackBarRef,\n  MAT_SNACK_BAR_DATA\n} from '@angular/material/snack-bar';\n\n/**\n * Service for cross component communication. */\n@Injectable()\nexport class CountdownService {\n  startTimer = new Subject < number > ();\n  timer = this.startTimer.pipe(switchMap(seconds =>\n    timer(0, 1000).pipe(map(t => seconds - t), take(seconds + 1))\n  ));\n  /**\n   * Start the Countdown\n   * @param time Number of milliseconds\n   */\n  start(time: number) {\n    const seconds = Math.floor(time / 1000);\n    this.startTimer.next(seconds);\n  }\n  /**\n   * Return the time left to print it out in the snackbar\n   */\n  timeLeft(): Observable < number > {\n    return this.timer;\n  }\n}\n/**\n * Main Page at /\n */\n@Component({\n  selector: 'pm-root',\n  template: `\n   <div class='mat-toolbar' id=\"gris\">\n   <nav class='navbar navbar-expand navbar-dark'>\n   <ul class=' navbar-nav nav-pills'>\n   <img src=\"./assets/images/IDEMIA_Logo.png\"\n        style=\"width:180px;height:50px;\"\n              />  \n          \n</ul>\n    </nav>\n</div>\n    <div class='mat-toolbar 'id=\"purple\" >\n    <nav class='navbar navbar-expand navbar-dark'>\n        <span style=\"color:white;\" class='navbar-brand' routerLinkActive='active' [routerLink]=\"['/']\">Data synchronization</span>\n        <span style=\"color:white;\" class='navbar-brand' routerLinkActive='active' [routerLink]=\"['/users']\">Citizens</span>\n        <span style=\"color:white;\" class='navbar-brand' routerLinkActive='active' [routerLink]=\"['/login']\">login</span>\n        <!--<ul class=' navbar-nav nav-pills'>\n          \n          <li class=\"nav-item\"><a class='nav-link' style=\"color:white;\" routerLinkActive='active' [routerLink]=\"['/users']\">Citizens</a></li>\n        \n        \n          <li class=\"nav-item\"><a class='nav-link' style=\"color:white;\" routerLinkActive='active' [routerLink]=\"['/login']\">login</a></li>\n        </ul>-->\n    </nav>\n</div>\n    <div class='container'>\n      <router-outlet></router-outlet>\n    </div>\n    `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * Title of The page\n   */\n  pageTitle = 'Data synchronization';\n  /**\n   * Value of milliseconds to initiate the interval\n   */\n  val = 12000;\n  state=0;\n  /**\n   * Value of milliseconds of the difference between the end of the duration of waiting\n   *  and the connecting snackbar\n   */\n  snval = 2000;\n  /**\n   * Creates an Observable that emits sequential numbers every specified interval of time\n   */\n  private source = interval(this.val);\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the server sent events\n   * and we can unsubscribe from it when we want or at the end of the component\n   */\n  private sub: Subscription;\n  /**\n   * Creates a subscription field so we can attach it to the execution of the observable of the interval observable\n   * that we have defined previously and we can unsubscribe from it when we want or at the end of the component\n   */\n  private check: Subscription;\n  /**\n   * Test if we are in offline mode or not\n   */\n  test: boolean;\n  /**\n   * Old string received if we are in online mode\n   */\n  old: string;\n  /**\n   * Old string received if we are in local mode\n   */\n  oldloc: string;\n  /**\n   * Reference to a snack bar in the component \"CountdownSnackbarComponent\"\n   */\n  snackBarRef: MatSnackBarRef < CountdownSnackbarComponent > ;\n  /**\n   * Define a default Horizontal Position of the snackbar\n   */\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  /**\n   * Define a default Vertical Position of the snackbar\n   */\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  /**\n   * Subscribe for the events emitted by the browser about the internet connectivity\n   * and subscribe for the observable returned by the interval function if the browser is connected\n   * @param _http Http Client\n   * @param stService Instance of the StateParameterService Class\n   * @param UpService Instance of the FileUploadService Class\n   * @param snackBar Snackbar instance to open a new snackbar\n   * @param countdown Instance of the CountdownService Class\n   * @param _sse Instance of the EventService Class for the online mode\n   * @param loc Instance of the EventService Class for the local mode\n   */\n  constructor(private _http: HttpClient, private stService: StateParameterService, private UpService: FileUploadService,\n    private snackBar: MatSnackBar, private countdown: CountdownService, private _sse: EventService, private loc: EventService) {\n    this.createOnline$().subscribe(isOnline => {\n      if (isOnline) {\n        this._sse.getUpdates();\n        this.val = 12000;\n        this.test = false;\n        const state=0;\n        this.check = this.source.subscribe(next => {\n          if (this.test) {\n            this.checker();\n            //console.log(\"access interval\");\n          }\n          if(state==this.state && this.oldloc!=\"y\"){\n            this._sse.evs.close();\n            this._sse.getUpdates();\n           // console.log(\"off\");\n            this.old=\"\";\n            this.oldloc=\"\";\n          }else{\n            this.state=0;\n          }\n\n        });\n      } else {\n        //this.sub.unsubscribe();\n        this.test = true;\n        this._sse.evs.close();\n        this.old = \"\";\n        this.oldloc = \"\";\n        if (this.check)\n          this.check.unsubscribe();\n       // this.openSnackBar(\"Device Disconnected\", 'danger-snackbar');\n      }\n    });\n  }\n  /**\n   * Subscribe for the events sent by the event source \"busy\", and subscribe for the events sent\n   * from the Server-sent events \"_sse\"\n   */\n  ngOnInit(): void {\n    var busy: boolean;\n    this.stService.busy.subscribe(foo => {\n      if (!foo && this.old == 'on') {\n        busy = false;\n       // this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        console.log(\"Access: busy\");\n        this.oldloc = \"\";\n      } else busy = true;\n    });\n    this.sub = this._sse.returnAsObservable().subscribe(msg => {\n      console.log(msg);\n      if (msg == \"on\") {\n        this.openSnackBar(\"Online Mode\");\n        this.stService.host = EventService.server;\n        this.loc.stopUpdates();\n        this.test = false;\n        this.old = msg;\n        this.oldloc = \"\";\n        console.log(\"Access: \" + msg);\n      }\n      else if (msg == \"rx\" || msg == 'nx' ) {\n        this.loc.getUpdates(EventService.local);\n        this.old = msg;\n        console.log(\"Access: \" + msg);\n      } else if (msg == 'y' && msg != this.oldloc) {\n        this.stService.host = EventService.local;\n       // this.openSnackBar(\"Local Mode\", 'blue-snackbar');\n        this.restore();\n        this.test = false;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      } else if ((msg == 'r' || msg == 'n' || msg == 'e') && msg != this.oldloc) {\n        this.stService.host = \"\";\n        this.loc.stopUpdates();\n        this.test = true;\n        this.oldloc = msg;\n        this.old = \"\";\n        console.log(\"Access: \" + msg);\n      }\n      else if (msg == 'ex') {\n        this.openSnackBar(\"Local Mode\", 'blue-snackbar');\n        if(this.test==false){\n          this._sse.evs.close();\n          this.loc.getUpdates(EventService.local);\n        }\n        setTimeout(() => {\n            this.loc.stopUpdates();\n            this._sse.getUpdates();\n          },\n          10000);\n          console.log(\"Access: \"+msg);\n        this.old = msg;\n      }\n      /*if (msg == 'yx')\n        this.old = msg;*/\n      if(msg=='on')\n        this.state+=1;\n    });\n  }\n  /**\n   * Unsubsribe from all subscriptions in the component and stops the communication with the event sources\n   */\n  ngOnDestroy(): void {\n    this._sse.stopUpdates();\n    this.loc.stopUpdates();\n    this.sub.unsubscribe();\n    this.check.unsubscribe();\n  }\n  /**\n   * restore the incomplete form to the local server if the connection to the remote one is lost\n   */\n  restore(): void {\n    if (this.stService.login)\n      this._http.post(this.stService.host + '/api/form', this.stService.login).subscribe(data => {\n        setTimeout(() => {\n            this.openSnackBar(\"Personal Informations Saved\", 'blue-snackbar', 3000);\n          },\n          3000);\n      });\n    if (this.stService.pic) {\n      this.UpService.postImg(this.stService.pic, this.stService.id, this.stService.host, \"pic\").subscribe(\n        (event: any) => {\n          setTimeout(() => {\n              this.openSnackBar(\"Portrait Uploaded Successfully!\", 'blue-snackbar', 3000);\n            },\n            6000);\n        });\n    }\n  }\n  /**\n   * Opens a snackbar\n   * @param msg Message To show\n   * @param color Background color of the snackbar\n   * @param val Timeout value before the snackbar disappear automatically\n   */\n  openSnackBar(msg: string, color = 'success-snackbar', val = 10000) {\n    this.snackBar.open(msg, \"OK\", {\n      duration: val,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: [color]\n    });\n  }\n  /**\n   * Opens a custom snackbar from the \"CountdownSnackbarComponent\" Component\n   * @param msg Message To show\n   * @param duration Timeout value before the snackbar disappear automatically\n   * @param color Background color of the snackbar\n   */\n  errsnackbar(msg: string, duration: number = 10000, color: string = 'danger-snackbar') {\n    if (this.snackBarRef)\n      this.snackBarRef.dismiss();\n    this.snackBarRef = this.snackBar.openFromComponent(CountdownSnackbarComponent, {\n      duration,\n      data: msg,\n      panelClass: [color],\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition\n    });\n    this.countdown.start(duration);\n    this.snackBarRef.onAction().subscribe(() => {\n      this.snval *= 2;\n      this.val *= 2;\n      this.check.unsubscribe();\n      this.source = interval(this.val);\n      this.checker(this.val - this.snval);\n      this.check = this.source.subscribe(next => {\n        this.checker(this.val - this.snval);\n      });\n    });\n  }\n\n/**\n * Returns The state of the connectivity using the browser\n */\n  createOnline$() {\n    return merge < boolean > (\n      fromEvent(window, 'offline').pipe(map(() => false)),\n      fromEvent(window, 'online').pipe(map(() => true)),\n      new Observable((sub: Observer < boolean > ) => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n  }\n  /**\n   * Check the status of the local server\n   * @param val Duration of the offline mode snackbar before retrying\n   */\n  checker(val = 10000): void {\n    this._http.get(EventService.local+\"/api/db\", {\n        observe: 'response'\n      })\n      .pipe(first())\n      .subscribe(resp => {\n        if (resp.status === 200) {\n          if (this.test) {\n            this.loc.getUpdates(EventService.local);\n            console.log(\"back to local mode\");\n          }\n        }\n      }, err => {\n        console.log(\"still offline mode\");\n        this.openSnackBar(\"Connecting...\",'blue-snackbar',1000);\n        setTimeout(() => {\n            this.errsnackbar(\"Offline Mode\", val);\n          },\n          2000);\n      });\n  }\n}\n/** Component opened inside a snackbar. */\n@Component({\n  selector: 'snackbar',\n  template: `\n  <button class=\"pull-left\" (click)=\"snackBarRef.dismissWithAction()\" mat-stroked-button color=\"warn\">RETRY NOW</button>\n  <span >{{data}} <br> Retrying in {{ timeLeft$ | async }} seconds...</span>\n  `\n})\nexport class CountdownSnackbarComponent {\n  /**\n   * Time left returned from the CountdownService\n   */\n  timeLeft$ = this.countdown.timeLeft();\n  /**\n   * Constructor of the CountdownSnackbarComponent\n   * @param countdown Instance from CountdownService Injectable\n   * @param data The message to show in the snackbar\n   * @param snackBarRef Reference to the snackbar\n   */\n  constructor(private countdown: CountdownService, @Inject(MAT_SNACK_BAR_DATA) public data: any,\n    public snackBarRef: MatSnackBarRef < CountdownSnackbarComponent > ) {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { ConnectionService } from 'ng-connection-service';\nimport { AppComponent,CountdownSnackbarComponent,CountdownService } from './app.component';\n//import { WelcomeComponent } from './home/welcome.component';\nimport { UserModule } from './users/user.module';\nimport {LoginModule} from './login/login.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FileUploadModule } from './file-upload/file-upload.module';\n//import { RFormModule } from './r-form/r-form.module';\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { StateParameterService } from \"./shared/st-parameter.service\";\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { CookieService } from 'ngx-cookie-service';\n//import {LoginComponent} from './r-form/r-form.component';\n//import {DynamicFormComponent}from './r-form/dynamic-form.component';\nimport {LoginComponent} from './login/login.component';\n//import { FormsModule,FormGroup}   from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    //LoginComponent,\n   // LoginComponent1,\n    //DynamicFormComponent,\n    CountdownSnackbarComponent\n  ],\n  imports: [\n    BrowserModule,\n   \n    \n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'home', component: WelcomeComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: '**', redirectTo: 'home', pathMatch: 'full' }\n    ]),\n    UserModule,\n    LoginModule,\n   //RFormModule,\n    FileUploadModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSnackBarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  entryComponents: [\n    CountdownSnackbarComponent,\n  ],\n  providers:[\n    CountdownService,\n    //DynamicFormComponent,\n    StateParameterService,CookieService\n  ],\n  exports:[\n    MatToolbarModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit , EventEmitter,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { FileUploadService } from \"./upload.service\";\nimport { Router, NavigationStart } from '@angular/router';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { StateParameterService } from '../shared/st-parameter.service';\nimport { EventService } from '../shared/event.service';\n\n/**\n * Upload Page at /form/pic and /form/bio\n */\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n  /** URL of the image */\n  imageURL: string;\n  /** FormGroup of the upload form */\n  uploadForm: FormGroup;\n  /** Selected files from the user */\n  selectedFiles: FileList;\n  /** Current File selected */\n  currentFile: File;\n  /** Progress of the upload */\n  progress = 0;\n  /** Message shown to the user when the upload has been succefully done or not */\n  message:string;\n  /** the next URL to visit */\n  url:string;\n  /** Page Title */\n  pageTitle:string;\n  /** Type of the image sent (Portrait or fingerprint) */\n  type:string;\n  /**\n   * Construct the component and Build the reactive form\n   * @param router use Router service to navigate among views\n   * @param stService use the fields in the bag or to backup the image uploaded\n   * @param fb Build a Reactive Form\n   * @param fileUploadService Inject the File Upload Service\n   */\n  constructor(private router : Router,private stService :StateParameterService,\n    public fb: FormBuilder,private fileUploadService: FileUploadService) {\n    // Reactive Form\n    this.uploadForm = this.fb.group({\n      avatar: [null],\n      name: ['']\n    });\n  }\n  /**\n   * Initiate the component with the title according to the router url\n   */\n  ngOnInit(): void {\n    if (this.router.url == '/login/pic') {\n      this.pageTitle = \"Upload Portrait\";\n      this.type=\"pic\";\n    }\n    else if (this.router.url == '/login/bio') {\n      this.pageTitle = \"Upload Biometry Info\";\n      this.type=\"bio\";\n    }\n  }\n  /**\n   * This function is triggered when the user chooses an image to upload so the preview will be shown in the page\n   * @param event Event target containing the image file\n   */\n  selectFile(event): void {\n    this.selectedFiles = event.target.files;\n    const file = (event.target as HTMLInputElement).files[0];\n      this.uploadForm.patchValue({\n        avatar: file\n      });\n      this.uploadForm.get('avatar').updateValueAndValidity()\n      // File Preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.imageURL = reader.result as string;\n      }\n      reader.readAsDataURL(file)\n  }\n  /**\n   * This function is triggered when the user hits the button to upload the photo\n   */\n  upload(): void {\n    this.progress = 0;\n    this.currentFile = this.selectedFiles.item(0);\n\n    this.fileUploadService.postImg(this.currentFile,this.stService.id,this.stService.host,this.type).subscribe(\n      (event: any) => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.message = event.body.message;\n          //console.log(event.body.message);\n          this.message = 'Uploaded Successfully!';\n          if (this.router.url === '/login/pic'){\n            this.stService.pic=this.currentFile;\n            this.url='/login/bio';\n          }\n          else if (this.router.url === '/login/bio'){\n            this.stService.login=null;\n            this.stService.pic=null;\n            if(this.stService.host==EventService.local)\n              this.stService.busy.emit(false);\n            this.url='/';\n          }\n          setTimeout(() =>\n          {\n              this.router.navigate([this.url]);\n          },\n          1000);\n\n          this.selectedFiles = undefined;\n        }\n      },\n      err => {\n        this.progress = 0;\n        this.message = 'Could not upload the file!';\n        //this.currentFile = undefined;\n      });\n\n  }\n}\n","\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n\n        <form [formGroup]=\"uploadForm\" >\n          <div *ngIf=\"currentFile\" class=\"progress\">\n            <div\n              class=\"progress-bar progress-bar-info progress-bar-striped\"\n              role=\"progressbar\"\n              attr.aria-valuenow=\"{{ progress }}\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: progress + '%' }\"\n            >\n              {{ progress }}%\n            </div>\n          </div>\n\n          <mat-form-field style=\"display: block;margin-left: auto;margin-right: auto;width: 50%;\" class=\"example-full-width\">\n            <mat-label>Select Image</mat-label>\n            <ngx-mat-file-input type=\"file\" accept=\"image/*\" placeholder=\"Select Image\" valuePlaceholder=\"No image file selected\"\n             (change)=\"selectFile($event)\"></ngx-mat-file-input>\n            <mat-icon matSuffix>image</mat-icon>\n            <!--<input style=\"display: block;margin-left: auto;margin-right: auto;width: 100%;\"\n            type=\"file\" accept=\"image/*\" (change)=\"selectFile($event)\" />-->\n          </mat-form-field>\n\n          <button class=\"btn btn-success\" style=\"display: block;margin-left: auto;margin-right: auto;width: 35%;\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">\n            Upload\n          </button>\n         <!-- <button type=\"submit\" mat-button color=\"primary\">\n            Done\n          </button>-->\n          <div class=\"alert alert-light text-center\" role=\"alert\" >{{ message }}</div>\n          <div class=\"card\" style=\"display: block;margin-left: auto;margin-right: auto;width: 80%;\">\n            <div class=\"card-header\">Preview</div>\n              <!-- Image Preview -->\n              <div  class=\"imagePreview\" >\n                <img style=\"display: block;margin-left: auto;margin-right:auto;width: 100%;\"\n                 *ngIf=\"imageURL && imageURL !== ''\" [src]=\"imageURL\" [alt]=\"uploadForm.value.name\">\n              </div>\n          </div>\n\n        </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FileUploadComponent } from './file-upload.component';\nimport { RouterModule } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { FormGuard } from \"./form.guard\";\n@NgModule({\n  declarations: [\n    FileUploadComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatProgressBarModule,\n    ReactiveFormsModule,\n    MaterialFileInputModule,\n   /* RouterModule.forChild([\n      { path: 'login/pic', canActivate: [FormGuard], component: FileUploadComponent },\n      { path: 'login/bio', canActivate: [FormGuard], component: FileUploadComponent }\n    ]),*/\n      RouterModule.forChild([\n      { path: 'login/pic', component: FileUploadComponent },\n      { path: 'login/bio', component: FileUploadComponent }\n    ]),\n    \n  ],\n  exports:[\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ]\n})\nexport class FileUploadModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent,HttpHeaders } from  '@angular/common/http';\nimport { Observable, } from 'rxjs';\n\n/** FileUploadService Injectable */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n  /**\n   * Constructs the Injectable\n   * @param http HTTP Client\n   */\n  constructor(private http: HttpClient) { }\n  /**\n   * Build the post request of the image to the server\n   * @param file File Object to upload\n   * @param id Citizen ID to append to the formdata of the request\n   * @param hostname URL of the server (remote or local)\n   * @param type Refers to the type of the image (Portrait or fingerprint)\n   */\n  postImg(file: File,id:string,hostname:string,type:string): Observable<HttpEvent<any>> {\n    const formData = new FormData();\n    formData.append('_id',id);\n    formData.append('file', file,file.name);\n\n    const req = new HttpRequest('POST', hostname+'/api/upload/'+type, formData, {\n      reportProgress: true,\n      responseType: 'json'\n    });\n    return this.http.request(req);\n  }\n\n}\n","import { Component } from '@angular/core';\n/**\n * Welcome Component at /home\n */\n@Component({\n  templateUrl: './welcome.component.html',\n  styleUrls:['./welcome.component.css']\n})\nexport class WelcomeComponent {\n  /** Page title */\n  public pageTitle = 'Home';\n}\n","\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Lato\">\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n\n <!-- Header/Home -->\n <!--header  id=\"home\">\n  <img src=\"./assets/images/Idemia3.jpg\" alt=\"boy\" class=\"w3-image\" width=100%  margine=0 height=\"1108\">\n</header-->\n\n\n\n  <!--div class=\"w3-center w3-black w3-padding-64 w3-opacity w3-hover-opacity-off\" id=\"home\">\n    <h1>About Us Page</h1>\n    <p>Some text about who we are and what we do.</p>\n    <p>Resize the browser window to see that this page is responsive by the way.</p>\n  </div-->\n  \n  <div class=\"w3-content w3-justify w3-text-grey w3-padding-64\" id=\"about\">\n    <h2 class=\"w3-text-light-grey\">About</h2>\n    <hr style=\"width:200px\" class=\"w3-opacity\">\n    <p>Some text about me. Some text about me. I am lorem ipsum consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n      ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum consectetur\n      adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n    </p>\n    </div>\n\n\n  <h2 style=\"text-align:center\">Our Team</h2>\n  <div class=\"row\">\n    <div class=\"column\">\n      <div class=\"card\">\n        <img src=\"./assets/images/hajar2.png\" alt=\"hajar\" style=\"width:100%\">\n        <div class=\"container\">\n          <h2>hajar kobbi idrissi</h2>\n          <p class=\"title\">stagiaire chez idemia</p>\n          <p>Some text that describes me lorem ipsum ipsum lorem.</p>\n          <p>hajar.kobbiidrissi@usmba.ac.ma</p>\n          <p><button class=\"button\">Contact</button></p>\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"column\">\n      <div class=\"card\">\n        <img src=\"/w3images/team2.jpg\" alt=\"Mike\" style=\"width:100%\">\n        <div class=\"container\">\n          <h2>Mike Ross</h2>\n          <p class=\"title\">Art Director</p>\n          <p>Some text that describes me lorem ipsum ipsum lorem.</p>\n          <p>mike@example.com</p>\n          <p><button class=\"button\">Contact</button></p>\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"column\">\n      <div class=\"card\">\n        <img src=\"./assets/images/zineb2.png\" alt=\"zineb\" style=\"width:100%\">\n        <div class=\"container\">\n          <h2>Zineb raji</h2>\n          <p class=\"title\">stagiaire chez idemia</p>\n          <p>Some text that describes me lorem ipsum ipsum lorem.</p>\n          <p>zineb.raj1@usmba.ac.ma</p>\n          <p><button class=\"button\">Contact</button></p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n   \n  <!--div class=\"bgimg-3 w3-display-container w3-opacity-min\">\n    <div class=\"w3-display-middle\">\n       <span class=\"w3-xxlarge w3-text-white w3-wide\">CONTACT</span>\n    </div>\n  </div>\n  <div class=\"w3-content w3-container w3-padding-64\" id=\"contact\">\n    <h3 class=\"w3-center\">WHERE I WORK</h3>\n    <p class=\"w3-center\"><em>I'd love your feedback!</em></p>\n  \n    <div class=\"w3-row w3-padding-32 w3-section\">\n      <div class=\"w3-col m4 w3-container\">\n        <img src=\"/w3images/map.jpg\" class=\"w3-image w3-round\" style=\"width:100%\">\n      </div>\n      <div class=\"w3-col m8 w3-panel\">\n        <div class=\"w3-large w3-margin-bottom\">\n          <i class=\"fa fa-map-marker fa-fw w3-hover-text-black w3-xlarge w3-margin-right\"></i> Chicago, US<br>\n          <i class=\"fa fa-phone fa-fw w3-hover-text-black w3-xlarge w3-margin-right\"></i> Phone: +00 151515<br>\n          <i class=\"fa fa-envelope fa-fw w3-hover-text-black w3-xlarge w3-margin-right\"></i> Email: mail@mail.com<br>\n        </div>\n        <p>Swing by for a cup of <i class=\"fa fa-coffee\"></i>, or leave me a note:</p>\n        <form action=\"/action_page.php\" target=\"_blank\">\n          <div class=\"w3-row-padding\" style=\"margin:0 -16px 8px -16px\">\n            <div class=\"w3-half\">\n              <input class=\"w3-input w3-border\" type=\"text\" placeholder=\"Name\" required name=\"Name\">\n            </div>\n            <div class=\"w3-half\">\n              <input class=\"w3-input w3-border\" type=\"text\" placeholder=\"Email\" required name=\"Email\">\n            </div>\n          </div>\n          <input class=\"w3-input w3-border\" type=\"text\" placeholder=\"Message\" required name=\"Message\">\n          <button class=\"w3-button w3-black w3-right w3-section\" type=\"submit\">\n            <i class=\"fa fa-paper-plane\"></i> SEND MESSAGE\n          </button>\n        </form>\n      </div>\n    </div>\n  </div-->\n  \n   \n   \n  <footer class=\"w3-center w3-black w3-padding-64 w3-opacity w3-hover-opacity-off\" style=\"color:#474e5d\">\n    <a href=\"#home\" class=\"w3-button w3-light-grey\"><i class=\"fa fa-arrow-up w3-margin-right\"></i>To the top</a>\n    <div class=\"w3-xlarge w3-section\">\n      <i class=\"fa fa-facebook-official w3-hover-opacity\"></i>\n      <i class=\"fa fa-instagram w3-hover-opacity\"></i>\n      <i class=\"fa fa-snapchat w3-hover-opacity\"></i>\n      <i class=\"fa fa-pinterest-p w3-hover-opacity\"></i>\n      <i class=\"fa fa-twitter w3-hover-opacity\"></i>\n      <i class=\"fa fa-linkedin w3-hover-opacity\"></i>\n    </div>\n    <p>Powered by <a href=\"https://www.w3schools.com/w3css/default.asp\" title=\"W3.CSS\" target=\"_blank\" class=\"w3-hover-text-green\">w3.css</a></p>\n  </footer>\n \n   \n  <!--<h2 style=\"color:white;\">Data synchronization </h2>\n <div class=\"container\" style=\"color:white;\">\n   <!-div class=\"row align-items-center\">\n     <div class=\"col-lg-6 col-md-9 \">\n      <div class=\"hero__caption\">\n        <h1 data-animation=\"fadeInLeft\" data-delay=\".3s\" class style=\"animation-delay: 0.3s;\">About</h1>\n        <blockquote>\n          Vingt fois sur le métier\n          remettez votre ouvrage\n       </blockquote>\n      </div>\n     </div>\n   </div->\n   <address><span style=\"font-family: terminal, monaco; font-size: xx-large;\">\n    <strong>About&nbsp;</strong>\n  </span>\n</address>\n  <address style=\"padding-left: 30px;color:white;\">\n    <span style=\"font-family: terminal, monaco; font-size: small;\">\n    <span class=\"TextRun SCXW85422549 BCX7\"\n     style=\"margin: 0px; padding: 0px; user-select: text; \n     -webkit-user-drag: none; -webkit-tap-highlight-color: transparent;\n       font-size: 12pt; line-height: 21.85px; \n\">De nos jours La synchronisation est un &eacute;l&eacute;ment\n</span><span class=\"TextRun SCXW85422549 BCX7\" style=\"margin: 0px; padding: 0px; user-select: text;\n -webkit-user-drag: none; -webkit-tap-highlight-color: transparent;font-size: 12pt; line-height: 21.85px;\n  \">&nbsp;essentiel d&egrave;s lors qu&rsquo;on utilise</span>\n\n  <span style=\"font-size: 0.9em;\">&nbsp; &nbsp; </span></span>\n  <span style=\"font-size: 0.9em;\"><span style=\"font-family: terminal, monaco;\">&nbsp; </span>&nbsp; &nbsp;&nbsp;</span></address><address></address>\n\n </div>\n\n\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n      <div class=\"text-center\">\n        <img src=\"./assets/images/logo.jpg\"\n             class=\"img-responsive center-block\"\n             style=\"max-height:500px;padding-bottom:50px;max-width:100%;\" />\n      </div>\n\n      <div class=\"text-center\">\n        <a href=\"https://github.com/oksyassine/YARLOMIA\">Source Code</a>\n      </div>\n    </div>\n  </div-->\n\n","import {Component } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { StateParameterService } from \"../shared/st-parameter.service\";\nimport { takeUntil } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\nimport { EventService } from '../shared/event.service';\nimport { Subject } from 'rxjs';\n//import { AuthService } from './auth.service'\n@Component({\ntemplateUrl:'./login.component.html',\nstyleUrls:['./login.component.css']\n})\nexport class LoginComponent{\n    firstName;\n    lastName;\n    address;\n    cin;\n    sexe;\n    \n   //form: FormGroup;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n    \n  constructor(private stService :StateParameterService,private router:Router,private http: HttpClient){\n  }\n\n   \n    login(formValues){\n       // this.authService.loginUser(formValues.userName,formValues.password)\n       //const obj= this.form.getRawValue();\n       console.log(formValues)\n      formValues[\"_id\"]= \"dossier_\"+formValues['cin'];\n      this.http.post(this.stService.host+'/api/form', formValues).pipe(takeUntil(this.destroy$)).subscribe(data => {\n        this.stService.id=formValues['_id'];//JSON.stringify(data);\n        this.stService.login=formValues['Firstname'];\n         //if(this.stService.host==EventService.local)\n         this.stService.busy.emit(true);\n         \n         setTimeout(() =>\n         {\n           this.router.navigate([\"/login/pic\"]);\n         },\n         1000);\n       });\n       \n    }\n    cancel(){\n\n    }\n\n}","\n\n<div class=\"form-body\" style=\"text-align: center\">\n  <div class=\"row\">\n      <div class=\"form-holder\">\n          <div class=\"form-content\">\n              <div class=\"form-items\">\n                  <h3>Personal information</h3>\n                  <!--p>Fill in the data below.</p-->\n                  <form class=\"requires-validation\" novalidate autocomplete=\"off\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm.value)\">\n\n                      <div class=\"col-md-12\">\n                         <input [(ngModel)]=\"firstName\" class=\"form-control\" type=\"text\" name=\"firstName\" placeholder=\"FirstName\" required>\n                         <div class=\"valid-feedback\">Username field is valid!</div>\n                         <div class=\"invalid-feedback\">Username field cannot be blank!</div>\n                      </div>\n\n                      <div class=\"col-md-12\">\n                          <input [(ngModel)]=\"lastName\" class=\"form-control\" type=\"text\" name=\"lastName\" placeholder=\"LastName\" required>\n                           <div class=\"valid-feedback\">Email field is valid!</div>\n                           <div class=\"invalid-feedback\">Email field cannot be blank!</div>\n                      </div>\n\n                      <div class=\"col-md-12\">\n                        <input [(ngModel)]=\"address\"class=\"form-control\" type=\"text\" name=\"address\" placeholder=\"Address\" required>\n                         <div class=\"valid-feedback\">Email field is valid!</div>\n                         <div class=\"invalid-feedback\">Email field cannot be blank!</div>\n                    </div>\n\n\n                     <div class=\"col-md-12\">\n                        <input [(ngModel)]=\"cin\" class=\"form-control\" type=\"text\" name=\"cin\" placeholder=\"cin\" required>\n                         <div class=\"valid-feedback\">Password field is valid!</div>\n                         <div class=\"invalid-feedback\">Password field cannot be blank!</div>\n                     </div>\n\n\n\n                      \n                   \n            \n\n                     <div class=\"col-md-12 mt-3\">\n                      <label class=\"mb-3 mr-1\" [(ngModel)]=\"sexe\" \n                      for=\"gender\">Gender: </label>\n                      \n                      <input type=\"radio\" class=\"btn-check\" name=\"sexe\" id=\"male\" autocomplete=\"off\" required>\n                      <label class=\"btn btn-sm btn-outline-secondary\" for=\"male\">Male</label>\n\n                      <input type=\"radio\" class=\"btn-check\" name=\"sexe\" id=\"female\" autocomplete=\"off\" required>\n                      <label class=\"btn btn-sm btn-outline-secondary\" for=\"female\">Female</label>\n                      </div>\n                         <div class=\"valid-feedback mv-up\">You selected a gender!</div>\n                          <div class=\"invalid-feedback mv-up\">Please select a gender!</div>\n              \n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required>\n                    <label class=\"form-check-label\">I confirm that all data are correct</label>\n                   <div class=\"invalid-feedback\">Please confirm that the entered data are all correct!</div>\n                  </div>\n            \n\n                      <div class=\"form-button mt-3\" style=\"text-align: center\">\n                          <button id=\"submit\" [disabled]=\"loginForm.invalid\"  type=\"submit\" class=\"btn btn-primary\">Register</button>\n                      </div>\n                  </form>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!--div class=\"col-md-4\" style=\"color:white;\">\n  <form  autocomplete=\"off\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm.value)\">\n    <div class=\"form-group\" >\n      <label for=\"firstName\">First name :</label>\n      <input [(ngModel)]=\"firstName\" name=\"firstName\" id=\"firstName\" type=\"text\" class=\"form-control\" placeholder=\"firstName...\" />\n    </div>\n    <div class=\"form-group\" >\n      <label for=\"lastName\">last name :</label>\n      <input [(ngModel)]=\"lastName\" name=\"lastName\" id=\"lastName\" type=\"text\" class=\"form-control\" placeholder=\"lastName...\" />\n    </div>\n    <div class=\"form-group\" >\n      <label for=\"address\">address:</label>\n      <input [(ngModel)]=\"address\" name=\"address\" id=\"address\" type=\"text\" class=\"form-control\" placeholder=\"address...\" />\n    </div>\n    <div class=\"form-group\" >\n      <label for=\"cin\">cin :</label>\n      <input [(ngModel)]=\"cin\" name=\"cin\" id=\"cin\"  type=\"text\" class=\"form-control\" placeholder=\"cin...\" />\n    </div>\n    <div class=\"form-group\" >\n      <label for=\"password\">Password:</label>\n      <input [(ngModel)]=\"password\" name=\"password\" id=\"password\" type=\"password\" class=\"form-control\"placeholder=\"Password...\" />\n    </div-->\n     <!--div class=\"form-group\">\n      <label for=\"sexe\">sexe:</label>\n      <br>\n      <select [(ngModel)]=\"sexe\" name=\"sexe\" id=\"sexe\">\n        <option  selected=\"yes\" value=\"\">--Please choose an option--</option>\n        <option value=\"male\">male</option>\n        <option value=\"feme\">femelle</option>\n      </select>\n     </div>\n\n\n\n  <div style=\"text-align: center\" >\n   <button type=\"submit\" class=\"btn btn-light\">Login</button>\n  </div>\n    \n  </form>\n</div-->","import { NgModule } from '@angular/core';\nimport { RouterModule,Router } from '@angular/router';\nimport {LoginComponent} from './login.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table'\nimport {ReactiveFormsModule,FormsModule,FormGroup,FormControl } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n   \n    LoginComponent\n  ],\n  imports: [\n    MatFormFieldModule,\n    MatTableModule,\n    FormsModule,\n    ReactiveFormsModule,\n    //FormGroup,\n    MatInputModule,\n    CommonModule,\n   \n    MatProgressSpinnerModule,\n    RouterModule.forChild([\n      { path: 'login', component: LoginComponent }, \n    ])\n    ],\n  providers:[\n  //  FormsModule,\n    ],\n  exports:[\n    MatTableModule,\n    MatFormFieldModule\n  ]\n})\nexport class LoginModule { }","import {BehaviorSubject} from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n/**\n * Event Service helps us to get the Server Sent Events from our remote or local server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  /** URL of the remote server */\n  static server=\"http://yarlomia.ga\";\n  /** URL of the local server */\n  static local=\"http://localhost:3003\";\n  constructor() {}\n  /**\n   * Event Source Object\n   */\n  evs: EventSource;\n  /**\n   * Type used to know which data type emitted to the component.\n   */\n  type=\"\";\n  /**\n   * BehaviorSubject Used to emit data to other components\n   */\n  private subj = new BehaviorSubject(this.type);\n  /**\n   * An observable so we can subscribe for the events emitted from this class.\n   */\n  returnAsObservable() {\n      return this.subj.asObservable();\n  }\n  /**\n   * Start Listening from the event source in our local server, emitting events to the component and handling errors.\n   */\n  getUpdates(host=EventService.server) {\n      let subject = this.subj;\n      /**\n       * Local Variable used to know which state where we are:\n       *\n       * Initial State =-1\n       */\n      let k=-1;\n      if (typeof(EventSource) !== 'undefined') {\n          this.evs = new EventSource(host+'/api/state');\n          this.evs.onopen = function(e) {\n              console.log(\"Opening connection with \" + host);\n          }\n          this.evs.addEventListener(\"dbx\", function(e) {\n            if (k==-1 || k==0)\n              subject.next(e[\"data\"]+'x');\n            k=0;\n          });\n          this.evs.addEventListener(\"db\", function(e) {\n            if (k==-1 || k==0)\n              subject.next(e[\"data\"]);\n            k=0;\n          });\n\n          this.evs.addEventListener(\"state\", function(e) {\n            subject.next(\"on\");\n        });\n\n          this.evs.onerror = function(e) {\n            console.log(\"test\");\n           \n              if (host==EventService.server)\n                subject.next('ex');\n              else subject.next('e');\n            \n\n            if(k==2){\n              if(host==EventService.server)\n                subject.next(\"rx\");\n              else subject.next(\"r\");\n            }\n            if (this.readyState == 0) {\n              console.log(\"Reconnecting… \"+host);\n              k++;\n            }\n          }\n      }\n  }\n  /**\n   * This function Stops the communication between the app and the event source\n   */\n  stopUpdates() {\n    if(this.evs.url==EventService.server+\"/api/state\"){\n      return null;\n    }\n    console.log(\"Closing connection with \" + this.evs.url);\n      this.evs.close();\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n/**\n * Bag to store the fields that we need in our application\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateParameterService {\n  /** Id of the citizen */\n  id: string;\n  /** It can takes URL of the remote server or the local one */\n  host:string;\n  /** The form filled in by the user */\n  login:JSON;\n  /** Portrait picture of the citizen */\n  pic:File;\n  /** The event emitter that we use to lock the switching from the 2 modes (online and local) inside a form */\n  busy: EventEmitter<boolean> = new EventEmitter();\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { IUser } from './user';\nimport { UserService } from './user.service';\n/**\n * detail of the citizen\n */\n@Component({\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n    /** page title */\n\n  pageTitle = 'Citizen Detail';\n  /** Message shown to the user when the get has been succefully done or not */\n\n  errorMessage = '';\n    /** citizen detail */\n\n  user: IUser | undefined;\n/** Construct the component  */\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private userService: UserService,\n              private domSanitizer: DomSanitizer) {\n  }\n  /**  Initiate the component with the id of user*/\n\n  ngOnInit(): void {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = param;\n      this.getUser(id);\n    }\n  }\n  /**This function is triggered when the user hits the button to view the detail  */\n\n  getUser(id: string): void {\n    this.userService.getUser(id).subscribe({\n      next: user => this.user = user,\n      error: err => this.errorMessage = err\n    });\n  }\n    /** This function is triggered to show the image*/\n\n  sanatizeUrl(b64ImageUrl): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(b64ImageUrl);\n  }\n    /** This function is triggered to return to the table of users*/\n\n  onBack(): void {\n    this.router.navigate(['/users']);\n  }\n}","<div class='card'\n     *ngIf='user'>\n  <div class='card-header'>\n    {{pageTitle + ': ' + user.firstName + ' ' + user.lastName}}\n  </div>\n\n  <div class='card-body'>\n    <div class='row'>\n      <div class='col-md-4'>\n        <div class='row'>\n          <div class='col-md-4'>First Name:</div>\n          <div class='col-md-8'>{{user.firstName}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>Last Name:</div>\n          <div class='col-md-8'>{{ user.lastName}}</div>\n        </div>        <div class='row'>\n          <div class='col-md-4'>CIN:</div>\n          <div class='col-md-8'>{{user.cin}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'> Address:</div>\n          <div class='col-md-8'>{{ user.address}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>Genre:</div>\n          <div class='col-md-8'>{{ user.sexe}}</div>\n        </div>\n      </div>\n      <div class='col-md-8'>\n\n      <div class='row'>\n\n      <div class='col-md-4'>\n        <img class='center-block img-responsive'\n             [style.width.px]='100'\n             [style.margin.px]='2'\n             [src]='sanatizeUrl(user.pic)'\n             [title]='user.firstName'\n             >\n      </div>\n\n\n      <div class='col-md-8'>\n        <img class='center-block img-responsive'\n             [style.width.px]='100'\n             [style.margin.px]='2'\n             [src]='sanatizeUrl(user.bio)'\n             [title]='user.firstName'\n             >\n      </div>\n    </div>\n\n\n      </div>\n    </div>\n  </div>\n\n  <div class='card-footer'>\n    <button class='btn btn-outline-secondary'\n            (click)='onBack()'\n            style='width:80px'>\n      <i class='fa fa-chevron-left'></i> Back\n    </button>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * we use this Guard to prohibit access to the citizen id\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDetailGuard implements CanActivate {\n /** use Router service to navigate among views  */\n  constructor(private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const id = next.url[1].path;\n    /** Grant the access by returning true if the citizen id exists in the bag*/\n\n    if (!id) {\n      alert('Invalid citizen Id');\n      this.router.navigate(['/users']);\n      return false;\n    }\n    return true;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { IUser } from './user';\nimport { UserService } from './user.service';\n    /** the liste of all citizens*/\n\n@Component({\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n\n    ]),\n  ],\n})\nexport class UserListComponent implements OnInit {\n    /** page title */\n\n  pageTitle ='Citizens List';\n    /** size of the image */\n\n  imageWidth = 50;\n  imageMargin = 2;\n  showImage = true;\n    /** message to show when we have error */\n\n  errorMessage = '';\n    /** detail about citizen */\n\n  expandedElement: IUser | null;\n    /** use to upload  the spinner*/\n\n  isLoadingResults = false;\n  /** the citizens */\n\n  Users: IUser[] = [];\n    /** use to show the columns of the table of citizens */\n\n  displayedColumns: string[] = ['pic', 'firstName', 'lastName', 'cin','address','sexe'];\n  dataSource;\n/** Construct the component  */\n  constructor(private domSanitizer: DomSanitizer,private userService: UserService) { }\n  /** This function is triggered when the user filitered the citizens*/\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  /**  This function is triggered to show the image*/\n\n  sanatizeUrl(b64ImageUrl): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(b64ImageUrl);\n  }\n\n /**\n   * Initiate the component \n   */\n\n  ngOnInit(): void {\n    this.isLoadingResults = true;\n\n    this.userService.getUsers().subscribe({\n      next: Users => {\n        this.Users = Users;\n        this.dataSource = new MatTableDataSource(this.Users);\n        this.isLoadingResults = false;\n\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n}","<div class='card'>\n  <div class='card-header'>\n    {{pageTitle}}\n  </div>\n  <div class='card-body'>\n    <div *ngIf=\"Users && Users.length;then contenu_bon else contenu_pas_bon\"></div>\n    <ng-template #contenu_bon>\n      <mat-form-field *ngIf='Users && Users.length'>\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n      </mat-form-field>\n      <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" *ngIf='Users && Users.length'>\n\n        <ng-container matColumnDef=\"pic\">\n          <th mat-header-cell *matHeaderCellDef> IMAGE </th>\n\n          <td mat-cell *matCellDef=\"let element\" >\n              <img *ngIf='showImage'\n            [src]='sanatizeUrl(element.pic)'\n            [title]='element.firstName'\n            [style.width.px]='imageWidth'\n            [style.margin.px]='imageMargin'> </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"firstName\">\n          <th mat-header-cell *matHeaderCellDef> FIRST NAME </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <a [routerLink]=\"['/users', element._id]\">\n            {{element.firstName}} </a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"lastName\">\n          <th mat-header-cell *matHeaderCellDef> LAST NAME </th>\n          <td mat-cell *matCellDef=\"let element\">               <a [routerLink]=\"['/users', element._id]\">{{element.lastName}} </a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"cin\">\n          <th mat-header-cell *matHeaderCellDef> CIN </th>\n          <td mat-cell *matCellDef=\"let element\"> <a [routerLink]=\"['/users', element._id]\">{{element.cin}} </a></td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"address\">\n          <th mat-header-cell *matHeaderCellDef> ADDRESS </th>\n          <td mat-cell *matCellDef=\"let element\"><a [routerLink]=\"['/users', element._id]\"> {{element.address}} </a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"sexe\">\n          <th mat-header-cell *matHeaderCellDef> GENDRE </th>\n          <td mat-cell *matCellDef=\"let element\"> <a [routerLink]=\"['/users', element._id]\">{{element.sexe}} </a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"expandedDetail\">\n          <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n            <div class=\"example-element-detail\"\n                 [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n              <div class=\"example-element-diagram\">\n                <div class=\"raw\">\n                  <img *ngIf='showImage'\n                  [src]='sanatizeUrl(element.pic)'\n                  [title]='element.firstName'\n                  [style.width.px]='imageWidth*3'\n                  [style.margin.px]='imageMargin'>\n                  <img *ngIf='showImage'\n                  [src]='sanatizeUrl(element.bio)'\n                  [title]='element.firstName'\n                  [style.width.px]='imageWidth*3'\n                  [style.margin.px]='imageMargin*3'>\n                </div>\n                <div class=\"raw\">\n                  <div class=\"example-element-name\"> {{element.firstName}}  {{element.lastName}}  </div>\n                </div>\n              </div>\n              </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\"\n            class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n      </table>\n\n\n    </ng-template>\n    <ng-template #contenu_pas_bon>\n      <div class=\"example-loading-shade\"\n      *ngIf=\"isLoadingResults \">\n   <mat-spinner *ngIf='!errorMessage && isLoadingResults'></mat-spinner>\n      </div>\n      <div class=\"alert alert-secondary\" role=\"alert\" *ngIf='!errorMessage && !isLoadingResults' >\n        no citizents to show    </div>\n    </ng-template>\n    <div *ngIf='errorMessage'\n    class='alert alert-danger'>\n     Error: {{ errorMessage }}\n     </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { UserListComponent } from './user-list.component';\nimport { UserDetailComponent } from './user-detail.component';\nimport { RouterModule } from '@angular/router';\nimport { UserDetailGuard } from './user-detail.guard';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    UserListComponent,\n    UserDetailComponent,\n  ],\n  imports: [\n    MatFormFieldModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    CommonModule,\n    MatProgressSpinnerModule,\n    RouterModule.forChild([\n      { path: 'users', component: UserListComponent },\n      {\n        path: 'users/:id',\n        canActivate: [UserDetailGuard],\n        component: UserDetailComponent\n      }\n    ])\n    ],\n  exports:[\n    MatTableModule,\n    MatFormFieldModule\n  ]\n})\nexport class UserModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { StateParameterService } from \"../shared/st-parameter.service\";\n\nimport { IUser } from './user';\nimport { Router } from '@angular/router';\n/**getUsersService Injectable */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n/**Construct the component  */\n  constructor(private router : Router,private http: HttpClient,private stService:StateParameterService) { }\n  /** This function is triggered to get all citizens */\n\n  getUsers(): Observable<IUser[]> {\n    if(!this.stService.host)\n    this.router.navigate([\"/\"]);\n    return this.http.get<IUser[]>(this.stService.host + \"/api/getAll\")\n      .pipe(\n        tap(data => console.log('')),\n        catchError(this.handleError)\n      );\n  }\n  /** This function is triggered to get citizen by id*/\n\n  getUser(id: string): Observable<IUser | undefined> {\n    return this.getUsers()\n      .pipe(\n        map((users: IUser[]) => users.find(p => p._id === id))\n      );\n  }\n  /** This function is triggered when the functions getUser and getUsers have a error*/\n\n  private handleError(err: HttpErrorResponse): Observable<never> {\n   \n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n   \n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}